Programming Language: Java

public List<Integer> postorderTraversal(TreeNode root) {
        List < Integer > res = new ArrayList < > ();
        helper(root, res);
        return res;
    }

    public void helper(TreeNode root, List < Integer > res) {
        if (root != null) {
            if (root.left != null) {
                helper(root.left, res);
            }
            if (root.right != null) {
                helper(root.right, res);
            }
            res.add(root.val);
        }
    }


Programming Language: Python
Solution: Recursion

code:
def postorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        ans = []
        self.Traverse(root, ans)
        
        return ans
    
    def Traverse(self, root, ans):
        if root == None:
            return
        if root.left == None and root.right == None:
            ans.append(root.val)
            return
        self.Traverse(root.left, ans)
        self.Traverse(root.right, ans)
        ans.append(root.val)