Programming Language: Python

Solution 1:

Code:
        s1 = ""
        while l1:
            s1 = str(l1.val) + s1
            l1 = l1.next
        s2 = ""
        while l2:
            s2 = str(l2.val) + s2
            l2 = l2.next
        sums = str(int(s1)+int(s2))
        
        result = ListNode(sums[-1])
        itr = result
        for i in xrange(2, len(sums)+1):
            itr.next = ListNode(sums[-i])
            itr = itr.next
        return result

Same Solution, Different Try:

Code:

	str_l1 = ""
        while(not l1 == None):
            str_l1 += str(l1.val)
            l1 = l1.next
        
        str_l2 = ""
        while(not l2 == None):
            str_l2 += str(l2.val)
            l2 = l2.next
        str_l1 = "".join(reversed(str_l1))
        str_l2 = "".join(reversed(str_l2))
        int_result = int(str_l1)+int(str_l2)
        res_list = "".join(reversed(str(int_result)))
        result = ListNode(res_list[0])
        tmp = result
        
        for i in range(1, len(res_list)):
            tmp.next = ListNode(res_list[i])
            tmp = tmp.next
            
        return result

Programming Language: C++

Code:

class Solution {
public:
    int reverse(int x) {
        int rev = 0;
        while(x !=0)
        {
            int pop = x % 10;
            x /= 10;
            if (rev > INT_MAX/10 || (rev == INT_MAX / 10 && pop > 7)) return 0;
            if (rev < INT_MIN/10 || (rev == INT_MIN / 10 && pop < -8)) return 0;
            rev = rev * 10 + pop;
        }
        return rev;
    }
};