Programming Language: Python

answer = []
        nums.sort()
        for i in range(len(nums)-2):
            if nums[i] > 0:
                break
            if i > 0:
                if nums[i] == nums[i-1]:
                    continue
            left = i + 1
            right = len(nums)-1
            while(left < right):
                total = nums[i] + nums[left] + nums[right]
                if total < 0:
                    left += 1
                elif total > 0:
                    right -= 1
                else:
                    answer.append([nums[i], nums[left], nums[right]])
                    while left < right and nums[left] == nums[left+1]:
                        left += 1
                    while left < right and nums[right] == nums[right-1]:
                        right -= 1
                    left += 1
                    right -= 1
            
        return answer

Programming Language: C++

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> answer;
        if(nums.size()<=2) return answer;
        sort(nums.begin(), nums.end(), less<int>());
        for(int i=0;nums[i]<=0 && i<nums.size()-2;i++){
            cout<<"where"<<endl;
            if(i>0){
                if(nums[i] == nums[i-1]){
                    continue;
                }
            }
            int left = i+1;
            int right = nums.size()-1;
            while(left<right){
                vector<int> path;
                int total = nums[i]+nums[left]+nums[right];
                if(total==0){
                    path.push_back(nums[i]);
                    path.push_back(nums[left]);
                    path.push_back(nums[right]);
                    answer.push_back(path);
                    while(left<right&&nums[left]==nums[left+1]){
                        left++;
                    }
                    left++;
                    while(left<right&&nums[right]==nums[right-1]){
                        right--;
                    }
                    right--;
                }
                else if(total<0){
                     while(left<right&&nums[left]==nums[left+1]){
                        left++;
                    }
                    left++;
                }
                else{
                    while(left<right&&nums[right]==nums[right-1]){
                        right--;
                    }
                    right--;
                }
            }
            
        }
        return answer;
    }
};