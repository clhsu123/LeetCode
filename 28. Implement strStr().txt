Programming Language: Python

Code:

class Solution(object):
    def strStr(self, haystack, needle):
        """
        :type haystack: str
        :type needle: str
        :rtype: int
        """
        # linear comparing
        # time complexity: O(n)
        for i in range(len(haystack)-len(needle)+1):
            if self.check_same(haystack[i:i+len(needle)], needle):
                return i
        return -1
        
    def check_same(self, str1, str2):fff 
        return str1 == str2


Programming Language: C++

Code:

class Solution {
public:
    int strStr(string haystack, string needle) {
        if(haystack.size()<needle.size()){
            return -1;
        }
        int ans = -1;
        for(int i=0;i<haystack.size()-needle.size()+1;i++){
            if(check_same(cut_string(haystack, i, needle.size()), needle)){
                ans = i;
                break;
            }
        }
        return ans;
    }
    bool check_same(string s1, string s2){
        return s1==s2;
    }
    string cut_string(string s, int start, int length){
        string cut_string="";
        for(int i=0;i<length;i++){
            cut_string+=s[start+i];
        }
        return cut_string;
    }
}; 