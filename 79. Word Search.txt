Programming Language: Python

Code:

class Solution(object):
    def exist(self, board, word):
        """
        :type board: List[List[str]]
        :type word: str
        :rtype: bool
        """
        holder = [[' ' for j in range(len(board[0]))] for i in range(len(board))]
        find = self.find_start(board, word[0])
        if len(word) == 1:
            for i in board:
                if word in i:
                    return True
            return False
        for pos in find:
            self.assign_array(board, holder)
            holder[pos[0]][pos[1]] = '$'
            if self.dfs(holder, pos, word[1:]):
                return True
        return False
    def find_start(self, board, first):
        find =  []
        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j] == first:
                    find.append([i, j])
        return find
    def dfs(self, board, pos, word):
        if not pos[0] == 0:
            if board[pos[0]-1][pos[1]] == word[0] and board[pos[0]-1][pos[1]]!='$':
                if len(word) == 1:
                    return True
                holder = board[pos[0]][pos[1]]
                board[pos[0]][pos[1]] = '$'
                pos[0] -=1
                if self.dfs(board, pos, word[1:]):
                    return True
                pos[0] +=1
                board[pos[0]][pos[1]] = holder
        if not pos[0] == len(board)-1:
            if board[pos[0]+1][pos[1]] == word[0] and board[pos[0]+1][pos[1]]!='$':
                if len(word) == 1:
                    return True
                holder = board[pos[0]][pos[1]]
                board[pos[0]][pos[1]] = '$'
                pos[0] +=1
                if self.dfs(board, pos, word[1:]):
                    return True
                pos[0] -=1
                board[pos[0]][pos[1]] = holder
        if not pos[1] == 0:
            if board[pos[0]][pos[1]-1] == word[0] and board[pos[0]][pos[1]-1]!='$':
                if len(word) == 1:
                    return True
                holder = board[pos[0]][pos[1]]
                board[pos[0]][pos[1]] = '$'
                pos[1] -=1
                if self.dfs(board, pos, word[1:]):
                    return True
                pos[1] +=1
                board[pos[0]][pos[1]] = holder
        if not pos[1] == len(board[0])-1:
            if board[pos[0]][pos[1]+1] == word[0] and board[pos[0]][pos[1]+1]!='$':
                if len(word) == 1:
                    return True
                holder = board[pos[0]][pos[1]]
                board[pos[0]][pos[1]] = '$'
                pos[1] +=1
                if self.dfs(board, pos, word[1:]):
                    return True
                pos[1] -=1
                board[pos[0]][pos[1]] = holder
        return 
    def assign_array(self, board_1, board_2):
        for i in range(len(board_1)):
            for j in range(len(board_1[0])):
                board_2[i][j] = board_1[i][j]