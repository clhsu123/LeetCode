Programming Language: Python

Strategy: Use DFS to traverse each subset

Code:

class Solution(object):
    def subsetsWithDup(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        nums.sort() #nlogn
        self.ans = []
        self.dfs([], nums)
        return self.ans
    
    def dfs(self, path, nums):
        if not path in self.ans:
            self.ans.append(path[:])
        if len(nums)==0:
            return
        for i in range(len(nums)):
            path.append(nums[i])
            self.dfs(path, nums[i+1:])
            path.pop()