Programming Language: Python

Solution: Dynamic Programming

Code:

class Solution(object):
    def numTrees(self, n):
        """
        :type n: int
        :rtype: int
        """
        dp = [1 for i in range(n+1)]
        for i in range(1, n+1):
            sum_ = 0
            for j in range(i):
                sum_ += dp[j]*dp[i-j-1]
            dp[i]=sum_
        return dp[n]

Programming Language: C++

Solution: Dynamic Programming

Code:

class Solution {
public:
    int numTrees(int n) {
        int dp[n+1];
        for(int i=0; i<=n;i++){
            dp[i]=1;
        }
        for(int i=1;i<=n;i++){
            int sum = 0;
            for(int j=0;j<i;j++){
                sum+=dp[j]*dp[i-j-1];
            }
            dp[i] = sum;
        }
        return dp[n];
    }
};